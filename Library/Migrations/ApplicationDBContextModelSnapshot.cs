// <auto-generated />
using Library.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Domain.Rol", b =>
                {
                    b.Property<int>("Pk_rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pk_rol_id"));

                    b.Property<string>("Pk_rol_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pk_rol_id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Pk_rol_id = 1,
                            Pk_rol_name = "Admin"
                        },
                        new
                        {
                            Pk_rol_id = 2,
                            Pk_rol_name = "User"
                        });
                });

            modelBuilder.Entity("Library.Models.Domain.User", b =>
                {
                    b.Property<int>("Pk_user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pk_user_id"));

                    b.Property<int>("Fk_rol_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pk_user_id");

                    b.HasIndex("Fk_rol_id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Pk_user_id = 1,
                            Fk_rol_id = 1,
                            Name = "EWT",
                            Password = "root123",
                            User_name = "admin"
                        },
                        new
                        {
                            Pk_user_id = 2,
                            Fk_rol_id = 2,
                            Name = "User",
                            Password = "123",
                            User_name = "username"
                        });
                });

            modelBuilder.Entity("Library.Models.Domain.User", b =>
                {
                    b.HasOne("Library.Models.Domain.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Fk_rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
